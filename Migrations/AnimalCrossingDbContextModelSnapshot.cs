// <auto-generated />
using AnimalCrossingAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AnimalCrossingAPI.Migrations
{
    [DbContext(typeof(AnimalCrossingDbContext))]
    partial class AnimalCrossingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AnimalCrossingAPI.Models.Availability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FishId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsAllDay")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsAllYear")
                        .HasColumnType("boolean");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rarity")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FishId")
                        .IsUnique();

                    b.ToTable("Availability");
                });

            modelBuilder.Entity("AnimalCrossingAPI.Models.Fish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CatchPhrase")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "catch-phrase");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "file-name");

                    b.Property<string>("MuseumPhrase")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasAnnotation("Relational:JsonPropertyName", "museum-phrase");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<string>("Shadow")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Fish");
                });

            modelBuilder.Entity("AnimalCrossingAPI.Models.Availability", b =>
                {
                    b.HasOne("AnimalCrossingAPI.Models.Fish", "Fish")
                        .WithOne("Availability")
                        .HasForeignKey("AnimalCrossingAPI.Models.Availability", "FishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fish");
                });

            modelBuilder.Entity("AnimalCrossingAPI.Models.Fish", b =>
                {
                    b.Navigation("Availability")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
